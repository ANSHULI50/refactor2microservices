<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag removeme.kubernetes.*
  format none
  read_from_head true
</source>


<match fluent.**>
  @type null
</match>

<match removeme.kubernetes.var.log.containers.**fluentd**.log>
  @type null
</match>

<match removeme.kubernetes.var.log.containers.**kube-system**.log>
  @type null
</match>


<match removeme.kubernetes.**>
  @type detect_exceptions
  message message
  remove_tag_prefix removeme
  languages java, python
  multiline_flush_interval 1
</match>

<match kubernetes.**>
  @type rewrite_tag_filter
  <rule>
    key message
    pattern /time=\d{4}-\d{2}-\d{2}/
    tag app.logger
  </rule>
  <rule>
    key message
    pattern /^(?!time=\d{4}-\d{2}-\d{2}).*$/
    tag app.other
  </rule>
</match>

<filter app.logger>
  @type record_transformer
  enable_ruby
  <record>
    time ${record["message"][/time=\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}/].sub("time=","")}
    level ${record["message"][/level=[A-Z]*\s/].sub("level=","")}
    hostname ${record["message"][/hostname=[A-Za-z0-9\-]*\s/].sub("hostname=","")}
    service ${record["message"][/service=[A-Za-z0-9\-]*\s/].sub("service=","")}
    message ${record["message"].sub(/^.*\smessage=/,"")}
    logsrc logger
  </record>
</filter>

<filter app.other>
  @type record_transformer
  enable_ruby
  <record>
    message ${record["message"]}
    logsrc other
  </record>
</filter>

<match **>
  @type copy
  <store>
    @type elasticsearch
    host elasticsearch
    port 9200
    logstash_format true
    logstash_prefix fluentd
    logstash_dateformat %Y%m%d
    include_tag_key true
    type_name access_log
    tag_key @log_name
    flush_interval 1s
  </store>
  <store>
    @type stdout
  </store>
</match>

