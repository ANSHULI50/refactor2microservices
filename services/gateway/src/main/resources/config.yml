spring:
  application:
    name: GatewaySvc
  cloud:
    gateway:
      routes:
        - id: admin-api
          uri: http://localhost:8081
          predicates:
            - Path=/admin/**
        - id: auth-api
          uri: http://localhost:8082
          predicates:
            - Path=/auth/**
        - id: product-api
          uri: http://localhost:8083
          predicates:
            - Path=/products/**
        - id: cart-api
          uri: http://localhost:8084
          predicates:
            - Path=/carts/**
        - id: order-api
          uri: http://localhost:8084
          predicates:
            - Path=/orders/**
        - id: inventory-api
          uri: http://localhost:8085
          predicates:
            - Path=/inventory/**
      httpclient:
        connect-timeout: 1000
        response-timeout: 5s
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      default-filters:
        - name: CircuitBreaker
          args:
            name: myCircuitBreaker
            fallbackUri: forward:/error/cb
        - name: Retry
          args:
            retries: 3
            statuses:
              - REQUEST_TIMEOUT
              - BAD_GATEWAY
              - SERVICE_UNAVAILABLE
              - GATEWAY_TIMEOUT
            methods: GET,PUT,DELETE
            backoff:
              firstBackoff: 500ms
              maxBackoff: 10000ms
              factor: 2
              basedOnPreviousValue: false

resilience4j.circuitbreaker:
  instances:
    myCircuitBreaker:
      slidingWindowSize: 60
      slidingWindowType: TIME_BASED
      failureRateThreshold: 50
      minimumNumberOfCalls: 4
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 2

resilience4j.timelimiter:
  instances:
    myCircuitBreaker:
      timeoutDuration: 4s
